name: CI
on: [push, pull_request]
jobs:
  test_postgres:
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        elixir: ['1.14.x', '1.15.x']
        otp: ['25.x', '26.x']
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
      DB_ADAPTER: postgres
    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - uses: actions/checkout@v2
      - run: mix deps.get
      - run: mix compile --warnings-as-errors
      - run: mix format --check-formatted && mix dialyzer
        if: matrix.elixir == '1.15.x'
      - run: mix ecto_cellar.gen
      - run: mix ecto.create
      - run: mix ecto.migrate
      - run: mix test

  test_mysql:
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        elixir: ['1.14.x', '1.15.x']
        otp: ['25.x', '26.x']
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
      DB_ADAPTER: mysql
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: mysql-root
        ports:
          - 3306:3306
    steps:
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - uses: actions/checkout@v2
      - run: mix deps.get
      - run: mix compile --warnings-as-errors
      - run: mix ecto_cellar.gen
      - run: mix ecto.create
      - run: mix ecto.migrate
      - run: mix test